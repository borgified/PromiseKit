branches:
  only:
    - master
    - v4
    - v7
    - legacy-1.x
    - /^\d+\.\d+\.\d+$/
stages:
  - name: compile
    if: type != push OR branch =~ /^\d+\.\d+\.\d+$/
  - name: deploy
    if: branch =~ ^\d+\.\d+\.\d+$
jobs:
  include:
    - stage: pretest
      name: Validate Linux has complete test coverage
      install: swift test --generate-linuxmain -Xswiftc -target -Xswiftc x86_64-apple-macosx10.12
      script: git diff --exit-code
      os: osx
      osx_image: xcode10.1
      language: swift

    - &carthage
      stage: compile
      osx_image: xcode9.2
      name: Carthage / Xcode 9.2
      os: osx
      language: objective-c
      script: carthage build --no-skip-current --configuration Release
    - <<: *carthage
      osx_image: xcode9.4
      name: Carthage / Xcode 9.4
    - <<: *carthage
      osx_image: xcode10.1
      name: Carthage / Xcode 10.1

    - &pod
      stage: lint
      osx_image: xcode8.3
      env: SWIFT=3.1
      name: pod lib lint --swift-version=3.1
      os: osx
      cache: cocoapods
      language: objective-c
      before_install: mv .github/PromiseKit.podspec .
      install: gem install cocoapods --pre -v 1.7.0.beta.1
      script: pod lib lint --subspec=PromiseKit/CorePromise --fail-fast --swift-version=$SWIFT

    - &linux
      stage: compile
      env: SWIFT_BUILD_VERSION=3 SWIFT_VERSION=4.0.3
      name: Linux / Swift 3.2
      os: linux
      dist: trusty
      sudo: false
      language: generic
      before_install: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      install: swift build -Xswiftc -swift-version -Xswiftc $SWIFT_BUILD_VERSION
      script: "true"
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3 SWIFT_VERSION=4.1.2
      name: Linux / Swift 3.3

    - stage: deploy
      install: gem install cocoapods --pre 1.7.0-beta.1
      before_script: mv .github/PromiseKit.podspec .
      script: |
        set -exo pipefail
        pod trunk push --verbose --allow-warnings | tee pod.log | ruby -e 'ARGF.each{ print "." }'
      # ^^ pipe because Travis times us out if there is no output
      # AND `pod` defaults to hardly any output
      # BUT `--verbose` generates so much output that Travis kills our script due to *too much* output!
      # --allow-warnings because Bolts generates warnings and CocoaPods fails you even if your deps emit warnings
      os: osx
      osx_image: xcode10.2
      language: swift
      after_failure: cat pod.log | grep error
